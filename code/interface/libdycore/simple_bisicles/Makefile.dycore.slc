# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/fortran/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# DMR 8/25/10 -- Modified version of Makefile.  Provides build of
# simples_bisicles, using programs in BISICLES_INTERFACE_DIR.

# GRAD_DIR = /home/ranken/util/Chombo/example/AMRINS/testlib


PWD = ./
BISICLES_INTERFACE_DIR = $(PWD)/../../../../BISICLES/code/interface


# for now, grab machine name and set variables accordingly
UNAMEN = $(shell uname -n)

#default is doug's values
HDF5_LIB = /home/ranken/util/hdf/5-1.6.10-linux-x86_64-static/lib/libhdf5.a
SZIP_LIB = /home/ranken/util/hdf/szip-2.1/src/.libs/libsz.a
NETCDF_DIR = /home/ranken/util/netcdf/nc_no_hdf5
LAPACK_LIBS = -llapack
EXTRA_BISICLES_LIBS = -lnetcdf   $(BLAS_LIBS)  $(LAPACK_LIB)

prefix = $(PWD)/../..

#dan's machine at lbl
ifeq ($(UNAMEN),loren)
HDF5_LIB = $(ANAG_HDF5_DIR)/lib/libhdf5.a
SZIP_LIB = -lz 
NETCDF_DIR = /home/loren/users/dmartin/util/netcdf/netcdf-4.1.2/
LAPACK_LIBS = -llapack-3 -llapack_atlas -lgfortran -lm
EXTRA_BISICLES_LIBS = -lnetcdf  -lblas $(LAPACK_LIB)
endif

#dan's laptop
ifeq ($(UNAMEN),dmartin.site)
HDF5_LIB = /usr/local/lib/libhdf5.a
SZIP_LIB = -lz
NETCDF_DIR = /usr/local/netcdf/netcdf-4.1.2
LAPACK_LIBS =  -llapack -lgfortran -lm 
EXTRA_BISICLES_LIBS = -lnetcdf  -lblas $(LAPACK_LIB)
endif

#dan's new laptop
ifeq ($(UNAMEN),martins)
HDF5_LIB = /usr/local/hdf5/hdf5-1.6.9-serial/lib/libhdf5.a
SZIP_LIB = -lz
NETCDF_DIR = /usr/local/netcdf/
LAPACK_LIBS =  -llapack -lgfortran -lm 
EXTRA_BISICLES_LIBS = -lnetcdf   $(LAPACK_LIB)
endif

#steph's desktop
ifeq ($(UNAMEN),geog-bsq92.ggy.bris.ac.uk)
HDF5_LIB = /local/GlimmerBisicles/hdf5/serial/lib/libhdf5.a
SZIP_LIB = -lz
NETCDF_DIR = /local/GlimmerBisicles/netcdf/
FCFLAGS += -DNO_RESCALE -I$(NETCDF_DIR)/include -ffree-line-length-none
LAPACK_LIBS =  -llapack -lgfortran -lm 
#EXTRA_BISICLES_LIBS = $(NETCDF_DIR)/lib/libnetcdf.a
endif

#steph's AMD
ifeq ($(UNAMEN),scaleoII)
HDF5_LIB = -lhdf5
SZIP_LIB = -lz
NETCDF_DIR = /home/steph/LBL/sys/
LAPACK_LIBS =  -llapack -lgfortran -lm 
endif

#dartagnan.ggy.bris.ac.uk
ifeq ($(UNAMEN),dartagnan.ggy.bris.ac.uk)

ifeq ($(MPI),TRUE)
HDF5_LIB = /data/ggslc/GlimmerBISICLES/gnu/hdf5/parallel/lib/libhdf5.a
NETCDF_DIR = /data/ggslc/GlimmerBISICLES/gnu/netcdf/parallel/
else
HDF5_LIB = /data/ggslc/GlimmerBISICLES/gnu/hdf5/serial/lib/libhdf5.a
NETCDF_DIR = /data/ggslc/GlimmerBISICLES/gnu/netcdf/serial/
endif

SZIP_LIB = -lz
LAPACK_LIBS =  -llapack -lgfortran -lm 
FCFLAGS += -DNO_RESCALE -I$(NETCDF_DIR)/include -ffree-line-length-none
EXTRA_BISICLES_LIBS = -lnetcdf

ifeq ($(MPI),TRUE)
MPI_DIR=/opt/local/CentOS-64/openmpi/1.4.1/gnu_fc_gfortran
FCFLAGS += -DHAVE_MPI -I$(MPI_DIR)/include
EXTRA_BISICLES_LIBS += -lmpi_cxx
endif

endif

LIB_EXT_DYCORE_DIR = $(BISICLES_INTERFACE_DIR)/libdycore
GLIMMER_TO_DYCORE = $(LIB_EXT_DYCORE_DIR)/glimmer_to_dycore
glimmer_to_dycore_SOURCES = $(GLIMMER_TO_DYCORE).F90


srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/glimmer
pkglibdir = $(libdir)/glimmer
pkgincludedir = $(includedir)/glimmer
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = simple_bisicles$(BISICLESCFG)$(EXEEXT) eis_glide$(EXEEXT) \
	glint_example$(EXEEXT) glex_ebm$(EXEEXT) \
	eismint3_glide$(EXEEXT) nc2config$(EXEEXT) spin_glide$(EXEEXT) \
	glide_thermal_equib$(EXEEXT)
check_PROGRAMS = test_config$(EXEEXT) test_setup$(EXEEXT) \
	test_ts$(EXEEXT) test_lithot$(EXEEXT) test_integrate$(EXEEXT) \
	test_commandline$(EXEEXT) test_writestats$(EXEEXT) \
	glimmer_unittest$(EXEEXT)
#am__append_1 = glimmer_sparse_pardiso.F90
#am__append_2 = glimmer_sparse_pardiso.F90
#am__append_3 = glimmer_sparse_trilinos.F90
subdir = src/fortran
DIST_COMMON = $(dist_variable_DATA) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/glimmer_vers.F90.in.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4macros/ax_f90_module_flag.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.inc
CONFIG_CLEAN_FILES = glimmer_vers.F90.in
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(variabledir)" "$(DESTDIR)$(variabledir)" \
	"$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libclimate_a_AR = $(AR) $(ARFLAGS)
libclimate_a_LIBADD =
am_libclimate_a_OBJECTS = eismint3_forcing.$(OBJEXT) \
	eismint3_types.$(OBJEXT) simple_forcing.$(OBJEXT) \
	eis_forcing.$(OBJEXT) eis_ela.$(OBJEXT) eis_temp.$(OBJEXT) \
	eis_slc.$(OBJEXT) eis_cony.$(OBJEXT) \
	glimmer_searchcircle.$(OBJEXT) eis_io.$(OBJEXT) \
	eis_types.$(OBJEXT) eismint3_io.$(OBJEXT) \
	spin_forcing.$(OBJEXT) spin_mb.$(OBJEXT) spin_temp.$(OBJEXT) \
	spin_slc.$(OBJEXT) spin_io.$(OBJEXT) testsfg.$(OBJEXT) \
	spin_types.$(OBJEXT)
libclimate_a_OBJECTS = $(am_libclimate_a_OBJECTS)
libglide_a_AR = $(AR) $(ARFLAGS)
libglide_a_LIBADD =
am_libglide_a_OBJECTS = glide.$(OBJEXT) glide_setup.$(OBJEXT) \
	glide_types.$(OBJEXT) glide_temp.$(OBJEXT) \
	glide_bwater.$(OBJEXT) glide_deriv.$(OBJEXT) xls.$(OBJEXT) \
	ice3d_lib.$(OBJEXT) glide_velo_higher.$(OBJEXT) \
	glide_thck.$(OBJEXT) glide_velo.$(OBJEXT) glide_mask.$(OBJEXT) \
	glide_stop.$(OBJEXT) glide_io.$(OBJEXT) \
	glide_nc_custom.$(OBJEXT) isostasy.$(OBJEXT) \
	isostasy_el.$(OBJEXT) isostasy_setup.$(OBJEXT) \
	isostasy_types.$(OBJEXT) glide_lithot.$(OBJEXT) \
	glide_lithot3d.$(OBJEXT) glide_lithot1d.$(OBJEXT) \
	glide_profile.$(OBJEXT) glide_diagnostics.$(OBJEXT) \
	glissade_temp.$(OBJEXT)  \
	glide_vertint.$(OBJEXT) glide_thckmask.$(OBJEXT) \
	glide_nonlin.$(OBJEXT) glide_grids.$(OBJEXT) glam.$(OBJEXT) \
	glam_strs2.$(OBJEXT) glam_thck_ppm.$(OBJEXT) \
	remap_advection.$(OBJEXT) remap_glamutils.$(OBJEXT) \
	glide_ground.$(OBJEXT) fo_upwind_advect.$(OBJEXT)
libglide_a_OBJECTS = $(am_libglide_a_OBJECTS)
libglimmer_a_AR = $(AR) $(ARFLAGS)
#libglimmer_a_DEPENDENCIES = ../cpp/call_trilinos.o
am__libglimmer_a_SOURCES_DIST = glimmer_vers.F90 \
	glimmer_commandline.F90 glimmer_config.F90 glimmer_global.F90 \
	glimmer_utils.F90 glimmer_log.F90 glimmer_ts.F90 \
	glimmer_ncdf.F90 glimmer_ncio.F90 glimmer_ncparams.F90 \
	glimmer_paramets.F90 glimmer_physcon.F90 kelvin.F90 \
	profile.F90 glimmer_pdd.F90 glimmer_routing.F90 \
	glimmer_daily_pdd.F90 glint_global_interp.F90 \
	glimmer_sparse_type.F90 glimmer_sparse.F90 \
	glimmer_sparse_umfpack.F90 glimmer_sparse_slap.F90 \
	glimmer_coordinates.F90 glimmer_integrate.F90 ncdf_utils.F90 \
	glimmer_map_CFproj.F90 glimmer_map_proj4.F90 \
	glimmer_map_types.F90 glimmer_map_init.F90 \
	glimmer_map_trans.F90 glimmer_restart_common.F90 \
	glimmer_restart_statscal.F90 glimmer_restart_statarr.F90 \
	glimmer_restart_pointarr.F90 glimmer_anomcouple.F90 \
	$(RESTART_STEM)_body.inc $(RESTART_STEM)_head.inc \
	glimmer_restart.F90 glimmer_filenames.F90 \
	glimmer_writestats.F90 writestats.c writestats.h \
	glimmer_sparse_pardiso.F90 glimmer_sparse_trilinos.F90
am__objects_1 =
am__objects_2 = $(am__objects_1)
#am__objects_3 = glimmer_sparse_pardiso.$(OBJEXT)
#am__objects_4 = glimmer_sparse_trilinos.$(OBJEXT)
am_libglimmer_a_OBJECTS = glimmer_vers.$(OBJEXT) \
	glimmer_commandline.$(OBJEXT) glimmer_config.$(OBJEXT) \
	glimmer_global.$(OBJEXT) glimmer_utils.$(OBJEXT) \
	glimmer_log.$(OBJEXT) glimmer_ts.$(OBJEXT) \
	glimmer_ncdf.$(OBJEXT) glimmer_ncio.$(OBJEXT) \
	glimmer_ncparams.$(OBJEXT) glimmer_paramets.$(OBJEXT) \
	glimmer_physcon.$(OBJEXT) kelvin.$(OBJEXT) profile.$(OBJEXT) \
	glimmer_pdd.$(OBJEXT) glimmer_routing.$(OBJEXT) \
	glimmer_daily_pdd.$(OBJEXT) glint_global_interp.$(OBJEXT) \
	glimmer_sparse_type.$(OBJEXT) glimmer_sparse.$(OBJEXT) \
	glimmer_sparse_umfpack.$(OBJEXT) glimmer_sparse_slap.$(OBJEXT) \
	glimmer_coordinates.$(OBJEXT) glimmer_integrate.$(OBJEXT) \
	ncdf_utils.$(OBJEXT) glimmer_map_CFproj.$(OBJEXT) \
	glimmer_map_proj4.$(OBJEXT) glimmer_map_types.$(OBJEXT) \
	glimmer_map_init.$(OBJEXT) glimmer_map_trans.$(OBJEXT) \
	glimmer_restart_common.$(OBJEXT) \
	glimmer_restart_statscal.$(OBJEXT) \
	glimmer_restart_statarr.$(OBJEXT) \
	glimmer_restart_pointarr.$(OBJEXT) \
	glimmer_anomcouple.$(OBJEXT) $(am__objects_2) \
	glimmer_restart.$(OBJEXT) glimmer_filenames.$(OBJEXT) \
	glimmer_writestats.$(OBJEXT) writestats.$(OBJEXT) \
	$(am__objects_3) $(am__objects_4)
nodist_libglimmer_a_OBJECTS = glimmer_vers.$(OBJEXT)
libglimmer_a_OBJECTS = $(am_libglimmer_a_OBJECTS) \
	$(nodist_libglimmer_a_OBJECTS)
libglint_a_AR = $(AR) $(ARFLAGS)
libglint_a_LIBADD =
am_libglint_a_OBJECTS = glint_climate.$(OBJEXT) \
	glint_initialise.$(OBJEXT) glint_io.$(OBJEXT) \
	glint_timestep.$(OBJEXT) glint_type.$(OBJEXT) \
	glint_main.$(OBJEXT) glint_interp.$(OBJEXT) \
	glint_global_grid.$(OBJEXT) glint_precip_param.$(OBJEXT) \
	glint_mbal.$(OBJEXT) glint_constants.$(OBJEXT) \
	glint_mbal_coupling.$(OBJEXT) glint_mbal_io.$(OBJEXT) \
	glint_example_clim.$(OBJEXT) glint_smb.$(OBJEXT) \
	glex_ebm_clim.$(OBJEXT) glint_mpinterp.$(OBJEXT) \
	glint_commandline.$(OBJEXT)
libglint_a_OBJECTS = $(am_libglint_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_eis_glide_OBJECTS = eis_glide.$(OBJEXT)
eis_glide_OBJECTS = $(am_eis_glide_OBJECTS)
eis_glide_DEPENDENCIES = libclimate.a libglide.a libglimmer.a \
	SLAP_library/libslap.a
am_eismint3_glide_OBJECTS = eismint3_glide.$(OBJEXT)
eismint3_glide_OBJECTS = $(am_eismint3_glide_OBJECTS)
eismint3_glide_DEPENDENCIES = libclimate.a libglide.a libglimmer.a \
	SLAP_library/libslap.a
am_glex_ebm_OBJECTS = glex_ebm.$(OBJEXT)
glex_ebm_OBJECTS = $(am_glex_ebm_OBJECTS)
glex_ebm_DEPENDENCIES = libglint.a libglide.a libglimmer.a \
	SLAP_library/libslap.a
am_glide_thermal_equib_OBJECTS = thermal_equib.$(OBJEXT)
glide_thermal_equib_OBJECTS = $(am_glide_thermal_equib_OBJECTS)
glide_thermal_equib_DEPENDENCIES = libclimate.a libglide.a \
	libglimmer.a SLAP_library/libslap.a
am_glimmer_unittest_OBJECTS = unittest_framework.$(OBJEXT) \
	unittest.$(OBJEXT) unittest_glide_deriv.$(OBJEXT) \
	unittest_ice3d_lib.$(OBJEXT) unittest_pbc.$(OBJEXT)
glimmer_unittest_OBJECTS = $(am_glimmer_unittest_OBJECTS)
glimmer_unittest_DEPENDENCIES = libglide.a libglimmer.a \
	SLAP_library/libslap.a
am_glint_example_OBJECTS = glint_example.$(OBJEXT)
glint_example_OBJECTS = $(am_glint_example_OBJECTS)
glint_example_DEPENDENCIES = libglint.a libglide.a libglimmer.a \
	SLAP_library/libslap.a
am_nc2config_OBJECTS = nc2config.$(OBJEXT)
nc2config_OBJECTS = $(am_nc2config_OBJECTS)
nc2config_DEPENDENCIES = libglimmer.a
am_simple_bisicles_OBJECTS = simple_bisicles.$(OBJEXT)
simple_bisicles_OBJECTS = $(am_simple_bisicles_OBJECTS)
simple_bisicles_DEPENDENCIES = libclimate.a libglide.a libglimmer.a \
	SLAP_library/libslap.a \
        $(BISICLES_INTERFACE_DIR)/libBisicles$(BISICLESCFG).a \
        $(BISICLES_INTERFACE_DIR)/libChomboLibs$(BISICLESCFG).a 
am_spin_glide_OBJECTS = spin_glide.$(OBJEXT)
spin_glide_OBJECTS = $(am_spin_glide_OBJECTS)
spin_glide_DEPENDENCIES = libclimate.a libglide.a libglimmer.a \
	SLAP_library/libslap.a
am_test_commandline_OBJECTS = test_commandline.$(OBJEXT) \
	glimmer_commandline.$(OBJEXT)
test_commandline_OBJECTS = $(am_test_commandline_OBJECTS)
test_commandline_LDADD = $(LDADD)
test_commandline_DEPENDENCIES =
am_test_config_OBJECTS = test_config.$(OBJEXT) \
	glimmer_config.$(OBJEXT) glimmer_log.$(OBJEXT)
test_config_OBJECTS = $(am_test_config_OBJECTS)
test_config_LDADD = $(LDADD)
test_config_DEPENDENCIES =
am_test_integrate_OBJECTS = test_integrate.$(OBJEXT) \
	glimmer_global.$(OBJEXT) glimmer_physcon.$(OBJEXT) \
	glimmer_integrate.$(OBJEXT)
test_integrate_OBJECTS = $(am_test_integrate_OBJECTS)
test_integrate_LDADD = $(LDADD)
test_integrate_DEPENDENCIES =
am_test_lithot_OBJECTS = test_lithot.$(OBJEXT)
test_lithot_OBJECTS = $(am_test_lithot_OBJECTS)
test_lithot_DEPENDENCIES = libclimate.a libglide.a libglimmer.a \
	SLAP_library/libslap.a
am_test_setup_OBJECTS = test_setup.$(OBJEXT)
test_setup_OBJECTS = $(am_test_setup_OBJECTS)
test_setup_DEPENDENCIES = libglide.a libglimmer.a
am_test_ts_OBJECTS = glimmer_ts.$(OBJEXT) glimmer_log.$(OBJEXT) \
	test_ts.$(OBJEXT)
test_ts_OBJECTS = $(am_test_ts_OBJECTS)
test_ts_LDADD = $(LDADD)
test_ts_DEPENDENCIES =
am_test_writestats_OBJECTS = test_writestats.$(OBJEXT) \
	glimmer_writestats.$(OBJEXT) writestats.$(OBJEXT)
test_writestats_OBJECTS = $(am_test_writestats_OBJECTS)
test_writestats_LDADD = $(LDADD)
test_writestats_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libclimate_a_SOURCES) $(libglide_a_SOURCES) \
	$(libglimmer_a_SOURCES) $(nodist_libglimmer_a_SOURCES) \
	$(libglint_a_SOURCES) $(eis_glide_SOURCES) \
	$(eismint3_glide_SOURCES) $(glex_ebm_SOURCES) \
	$(glide_thermal_equib_SOURCES) $(glimmer_unittest_SOURCES) \
	$(glint_example_SOURCES) $(nc2config_SOURCES) \
	$(simple_bisicles_SOURCES) $(spin_glide_SOURCES) \
	$(test_commandline_SOURCES) $(test_config_SOURCES) \
	$(test_integrate_SOURCES) $(test_lithot_SOURCES) \
	$(test_setup_SOURCES) $(test_ts_SOURCES) \
	$(test_writestats_SOURCES) \
        $(glimmer_to_dycore_SOURCES)
DIST_SOURCES = $(libclimate_a_SOURCES) $(libglide_a_SOURCES) \
	$(am__libglimmer_a_SOURCES_DIST) $(libglint_a_SOURCES) \
	$(eis_glide_SOURCES) $(eismint3_glide_SOURCES) \
	$(glex_ebm_SOURCES) $(glide_thermal_equib_SOURCES) \
	$(glimmer_unittest_SOURCES) $(glint_example_SOURCES) \
	$(nc2config_SOURCES) $(simple_bisicles_SOURCES) \
	$(spin_glide_SOURCES) $(test_commandline_SOURCES) \
	$(test_config_SOURCES) $(test_integrate_SOURCES) \
	$(test_lithot_SOURCES) $(test_setup_SOURCES) \
	$(test_ts_SOURCES) $(test_writestats_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
dist_variableDATA_INSTALL = $(INSTALL_DATA)
variableDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dist_variable_DATA) $(variable_DATA)
nodist_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(nodist_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ranken/util/pglim/parallel/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/ranken/util/pglim/parallel/missing --run tar
AUTOCONF = ${SHELL} /home/ranken/util/pglim/parallel/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ranken/util/pglim/parallel/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ranken/util/pglim/parallel/missing --run automake-1.9
AWK = gawk
BUILD_RESTARTS_FALSE = 
BUILD_RESTARTS_TRUE = #
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -DNO_RESCALE
CFORTRAN_CFLAGS = -DpgiFortran -DNO_RESCALE
CPPFLAGS = -DpgiFortran -DNO_RESCALE
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DNO_RESCALE
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
EXT_BLAS_FALSE = #
EXT_BLAS_TRUE = 
EXT_GOMP_FALSE = 
EXT_GOMP_TRUE = #
EXT_LAPACK_FALSE = #
EXT_LAPACK_TRUE = 
#F77 = gfortran
#FC = gfortran -g -ffree-line-length-none
#FCFLAGS =  -DNO_RESCALE -I$(NETCDF_DIR)/include  
#FCFLAGS_f90 = 
FFLAGS = 
GLIMMER_CVS_VERS = 
GLIMMER_MAJOR_VERSION = 1
GLIMMER_MICRO_VERSION = 1
GLIMMER_MINOR_VERSION = 5
GLIMMER_VERSION = 1.5.1
HAVE_CVS_FALSE = 
HAVE_CVS_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS =  -L$(NETCDF_DIR)/lib
LIBOBJS = 
LIBS = -lnetcdf   #-lblas $(LAPACK_LIBS)
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ranken/util/pglim/parallel/missing --run makeinfo
OBJEXT = o
PACKAGE = glimmer
PACKAGE_BUGREPORT = glimmer-discuss@forge.nesc.ac.uk
PACKAGE_NAME = GLIMMER
PACKAGE_STRING = GLIMMER 1.5.1
PACKAGE_TARNAME = glimmer
PACKAGE_VERSION = 1.5.1
PARDISO_FALSE = 
PARDISO_TRUE = #
PATH_SEPARATOR = :
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.4
RANLIB = ranlib
RUN_TESTS_FALSE = 
RUN_TESTS_TRUE = #
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TRILINOS_FALSE = 
TRILINOS_TRUE = #
UMFPACK_FALSE = 
UMFPACK_TRUE = #
VERSION = 1.5.1
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_FC = f95
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/ranken/util/pglim/parallel/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pkgpyexecdir = ${pyexecdir}/glimmer
pkgpythondir = ${pythondir}/glimmer
program_transform_name = s,x,x,
pyexecdir = ${exec_prefix}/lib64/python2.4/site-packages
pythondir = ${prefix}/lib/python2.4/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = SLAP_library
#if TRILINOS
#include $(TRILINOS_PREFIX)/include/Makefile.export.NOX
#endif TRILINOS
RESTART_STEM = glimmer_rst
RESTART_INC_INS = $(RESTART_STEM)_body.inc.in $(RESTART_STEM)_head.inc.in
RESTART_INCS = $(RESTART_INC_INS:.inc.in=.inc)
RESTART_COMMON = glimmer_restart_common.F90 glimmer_restart_pointarr.F90 \
               glimmer_restart_statarr.F90 glimmer_restart_statscal.F90

lib_LIBRARIES = libglide.a libglimmer.a libglint.a libclimate.a
variable_DATA = glide_vars.def eis_vars.def glint_vars.def time_vars.def \
                glint_mbal_vars.def eismint3_vars.def spin_vars.def ncdf_template.F90.in

variabledir = $(pkgdatadir)
dist_variable_DATA = $(variable_DATA)
nodist_include_HEADERS := $(wildcard *.mod)
EXTRA_DIST = f90_dep.mak $(RESTART_INC_INS)
BUILT_SOURCES = glide_io.F90 eis_io.F90 spin_io.F90 glint_io.F90 glint_mbal_io.F90 \
                eismint3_io.F90 $(RESTART_INCS)

CLEANFILES = $(BUILT_SOURCES) glimmer_vers.F90 f90_dep.mak *.mod
RESTART_CODE = glide_types.F90 glimmer_config.F90 \
	glimmer_coordinates.F90 glimmer_daily_pdd.F90 \
	glimmer_map_types.F90 glimmer_ncdf.F90 glimmer_pdd.F90 \
	glimmer_searchcircle.F90 glimmer_sparse.F90 \
	glimmer_sparse_slap.F90 glimmer_ts.F90 glint_main.F90 \
	glint_global_grid.F90 glint_interp.F90 glint_mbal_coupling.F90 \
	glint_mbal.F90 glint_smb.F90 glint_type.F90 isostasy_types.F90 \
	profile.F90 simple_forcing.F90 glimmer_paramets.F90 \
	glimmer_anomcouple.F90 glint_mpinterp.F90 $(am__append_1)
libglimmer_a_SOURCES = glimmer_vers.F90 glimmer_commandline.F90 \
	glimmer_config.F90 glimmer_global.F90 glimmer_utils.F90 \
	glimmer_log.F90 glimmer_ts.F90 glimmer_ncdf.F90 \
	glimmer_ncio.F90 glimmer_ncparams.F90 glimmer_paramets.F90 \
	glimmer_physcon.F90 kelvin.F90 profile.F90 glimmer_pdd.F90 \
	glimmer_routing.F90 glimmer_daily_pdd.F90 \
	glint_global_interp.F90 glimmer_sparse_type.F90 \
	glimmer_sparse.F90 glimmer_sparse_umfpack.F90 \
	glimmer_sparse_slap.F90 glimmer_coordinates.F90 \
	glimmer_integrate.F90 ncdf_utils.F90 glimmer_map_CFproj.F90 \
	glimmer_map_proj4.F90 glimmer_map_types.F90 \
	glimmer_map_init.F90 glimmer_map_trans.F90 \
	glimmer_restart_common.F90 glimmer_restart_statscal.F90 \
	glimmer_restart_statarr.F90 glimmer_restart_pointarr.F90 \
	glimmer_anomcouple.F90 $(RESTART_INCS) glimmer_restart.F90 \
	glimmer_filenames.F90 glimmer_writestats.F90 writestats.c \
	writestats.h $(am__append_2) $(am__append_3)
nodist_libglimmer_a_SOURCES = glimmer_vers.F90
#libglimmer_a_LIBADD = ../cpp/call_trilinos.o
libglide_a_SOURCES = glide.F90 glide_setup.F90 glide_types.F90 glide_temp.F90 \
                     glide_bwater.F90 glide_deriv.F90 xls.F90 ice3d_lib.F90 \
                     glide_velo_higher.F90 glide_thck.F90 glide_velo.F90 \
                     glide_mask.F90 glide_stop.F90 glide_io.F90 \
                     glide_nc_custom.F90 isostasy.F90 isostasy_el.F90\
                     isostasy_setup.F90 isostasy_types.F90 glide_lithot.F90\
                     glide_lithot3d.F90 glide_lithot1d.F90 glide_profile.F90\
                     glide_diagnostics.F90 \
                     glissade_temp.F90  glide_vertint.F90\
                     glide_thckmask.F90 glide_nonlin.F90 glide_grids.F90\
                     glam.F90 glam_strs2.F90 glam_thck_ppm.F90\
                     remap_advection.F90 remap_glamutils.F90 glide_ground.F90 \
                     fo_upwind_advect.F90

# *sfp* Added the last two lines above for addition of Payne/Price HO dynamics and  
# *sfp* LANL inc. remapping for dH/dt calculation
libglint_a_SOURCES = glint_climate.F90 glint_initialise.F90 glint_io.F90 \
                     glint_timestep.F90 glint_type.F90 glint_main.F90 \
                     glint_interp.F90 glint_global_grid.F90 \
                     glint_precip_param.F90 glint_mbal.F90 glint_constants.F90\
                     glint_mbal_coupling.F90 glint_mbal_io.F90 \
                     glint_example_clim.F90 glint_smb.F90 glex_ebm_clim.F90 \
                     glint_mpinterp.F90 glint_commandline.F90

libclimate_a_SOURCES = eismint3_forcing.F90 eismint3_types.F90 \
                       simple_forcing.F90 eis_forcing.F90 eis_ela.F90 \
                       eis_temp.F90 eis_slc.F90 eis_cony.F90 \
                       glimmer_searchcircle.F90 eis_io.F90 eis_types.F90 \
                       eismint3_io.F90 spin_forcing.F90 spin_mb.F90 \
                       spin_temp.F90 spin_slc.F90 spin_io.F90 \
                       testsfg.F90 spin_types.F90 

eismint3_glide_SOURCES = eismint3_glide.F90
eismint3_glide_LDADD = libclimate.a libglide.a libglimmer.a \
                       SLAP_library/libslap.a $(BLAS_LIBS) $(NETCDF_LDFLAGS) $(NETCDF_LIBS) 

simple_bisicles_SOURCES = simple_bisicles.F90 
simple_bisicles_LDADD = libclimate.a libglide.a libglimmer.a \
                     SLAP_library/libslap.a $(BLAS_LIBS) $(NETCDF_LDFLAGS) $(NETCDF_LIBS) \
	    	     $(GLIMMER_TO_DYCORE).o \
		     -lstdc++ -lz  $(HDF5_LIB) $(SZIP_LIB) \
		     -Wl,--start-group \
                     $(BISICLES_INTERFACE_DIR)/libBisicles$(BISICLESCFG).a \
		     $(BISICLES_INTERFACE_DIR)/libChomboLibs$(BISICLESCFG).a \
	             $(HDF5_LIB) $(SZIP_LIB) $(BISICLES_INTERFACE_DIR)/libtarmac/libtarmac.a $(EXTRA_BISICLES_LIBS)\
		     -Wl,--end-group 


eis_glide_SOURCES = eis_glide.F90
eis_glide_LDADD = libclimate.a libglide.a libglimmer.a SLAP_library/libslap.a $(BLAS_LIBS) $(NETCDF_LDFLAGS) $(NETCDF_LIBS)
spin_glide_SOURCES = spin_glide.F90
spin_glide_LDADD = libclimate.a libglide.a libglimmer.a SLAP_library/libslap.a
glint_example_SOURCES = glint_example.F90
glint_example_LDADD = libglint.a libglide.a libglimmer.a SLAP_library/libslap.a $(BLAS_LIBS) $(NETCDF_LDFLAGS) $(NETCDF_LIBS)
glex_ebm_SOURCES = glex_ebm.F90
glex_ebm_LDADD = libglint.a libglide.a libglimmer.a SLAP_library/libslap.a $(BLAS_LIBS) $(NETCDF_LDFLAGS) $(NETCDF_LIBS)
nc2config_SOURCES = nc2config.F90
nc2config_LDADD = libglimmer.a $(NETCDF_LDFLAGS) $(NETCDF_LIBS)
test_config_SOURCES = test_config.F90 glimmer_config.F90 glimmer_log.F90
test_setup_SOURCES = test_setup.F90
test_setup_LDADD = libglide.a libglimmer.a $(NETCDF_LDFLAGS) $(NETCDF_LIBS)
test_ts_SOURCES = glimmer_ts.F90 glimmer_log.F90 test_ts.F90
test_lithot_SOURCES = test_lithot.F90
test_lithot_LDADD = libclimate.a libglide.a libglimmer.a SLAP_library/libslap.a $(BLAS_LIBS) $(NETCDF_LDFLAGS) $(NETCDF_LIBS)
test_integrate_SOURCES = test_integrate.F90 glimmer_global.F90 \
                         glimmer_physcon.F90 glimmer_integrate.F90

test_commandline_SOURCES = test_commandline.F90 glimmer_commandline.F90
test_writestats_SOURCES = test_writestats.F90 glimmer_writestats.F90 writestats.c writestats.h
glimmer_unittest_SOURCES = unittest_framework.F90 unittest.F90 unittest_glide_deriv.F90 \
                           unittest_ice3d_lib.F90 unittest_pbc.F90

glimmer_unittest_LDADD = libglide.a libglimmer.a SLAP_library/libslap.a
glide_thermal_equib_SOURCES = thermal_equib.F90
glide_thermal_equib_LDADD = libclimate.a libglide.a libglimmer.a SLAP_library/libslap.a
ALL_SRC = $(test_integrage_SOURCES) $(test_lithot_SOURCES) $(test_ts_SOURCES) $(test_setup_SOURCES) \
        $(test_config_SOURCES) $(nc2config_SOURCES) $(glex_ebm_SOURCES) $(glint_example_SOURCES) \
	$(eis_glide_SOURCES) $(simple_bisicles_SOURCES) $(eismint3_glide_SOURCES) $(libglimmer_a_SOURCES) \
	$(libglide_a_SOURCES) $(libglint_a_SOURCES) $(libclimate_a_SOURCES) $(spin_glide_SOURCES) \
        $(glimmer_unittest_SOURCES)

AM_FCFLAGS = $(NETCDF_CPPFLAGS) $(HDF5_CPPFLAGS)
LDADD = $(NETCDF_LDFLAGS) $(NETCDF_LIBS)
AM_CFLAGS = $(CFORTRAN_CFLAGS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .F90 .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/fortran/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/fortran/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
glimmer_vers.F90.in: $(top_builddir)/config.status $(srcdir)/glimmer_vers.F90.in.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libclimate.a: $(libclimate_a_OBJECTS) $(libclimate_a_DEPENDENCIES) 
	-rm -f libclimate.a
	$(libclimate_a_AR) libclimate.a $(libclimate_a_OBJECTS) $(libclimate_a_LIBADD)
	$(RANLIB) libclimate.a
libglide.a: $(libglide_a_OBJECTS) $(libglide_a_DEPENDENCIES) 
	-rm -f libglide.a
	$(libglide_a_AR) libglide.a $(libglide_a_OBJECTS) $(libglide_a_LIBADD)
	$(RANLIB) libglide.a
libglimmer.a: $(libglimmer_a_OBJECTS) $(libglimmer_a_DEPENDENCIES) 
	-rm -f libglimmer.a
	$(libglimmer_a_AR) libglimmer.a $(libglimmer_a_OBJECTS) $(libglimmer_a_LIBADD)
	$(RANLIB) libglimmer.a
libglint.a: $(libglint_a_OBJECTS) $(libglint_a_DEPENDENCIES) 
	-rm -f libglint.a
	$(libglint_a_AR) libglint.a $(libglint_a_OBJECTS) $(libglint_a_LIBADD)
	$(RANLIB) libglint.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
eis_glide$(EXEEXT): $(eis_glide_OBJECTS) $(eis_glide_DEPENDENCIES) 
	@rm -f eis_glide$(EXEEXT)
	$(FCLINK) $(eis_glide_LDFLAGS) $(eis_glide_OBJECTS) $(eis_glide_LDADD) $(LIBS)
eismint3_glide$(EXEEXT): $(eismint3_glide_OBJECTS) $(eismint3_glide_DEPENDENCIES) 
	@rm -f eismint3_glide$(EXEEXT)
	$(FCLINK) $(eismint3_glide_LDFLAGS) $(eismint3_glide_OBJECTS) $(eismint3_glide_LDADD) $(LIBS)
glex_ebm$(EXEEXT): $(glex_ebm_OBJECTS) $(glex_ebm_DEPENDENCIES) 
	@rm -f glex_ebm$(EXEEXT)
	$(FCLINK) $(glex_ebm_LDFLAGS) $(glex_ebm_OBJECTS) $(glex_ebm_LDADD) $(LIBS)
glide_thermal_equib$(EXEEXT): $(glide_thermal_equib_OBJECTS) $(glide_thermal_equib_DEPENDENCIES) 
	@rm -f glide_thermal_equib$(EXEEXT)
	$(FCLINK) $(glide_thermal_equib_LDFLAGS) $(glide_thermal_equib_OBJECTS) $(glide_thermal_equib_LDADD) $(LIBS)
glimmer_unittest$(EXEEXT): $(glimmer_unittest_OBJECTS) $(glimmer_unittest_DEPENDENCIES) 
	@rm -f glimmer_unittest$(EXEEXT)
	$(FCLINK) $(glimmer_unittest_LDFLAGS) $(glimmer_unittest_OBJECTS) $(glimmer_unittest_LDADD) $(LIBS)
glint_example$(EXEEXT): $(glint_example_OBJECTS) $(glint_example_DEPENDENCIES) 
	@rm -f glint_example$(EXEEXT)
	$(FCLINK) $(glint_example_LDFLAGS) $(glint_example_OBJECTS) $(glint_example_LDADD) $(LIBS)
nc2config$(EXEEXT): $(nc2config_OBJECTS) $(nc2config_DEPENDENCIES) 
	@rm -f nc2config$(EXEEXT)
	$(FCLINK) $(nc2config_LDFLAGS) $(nc2config_OBJECTS) $(nc2config_LDADD) $(LIBS)
simple_bisicles$(BISICLESCFG)$(EXEEXT): $(simple_bisicles_OBJECTS) $(simple_bisicles_DEPENDENCIES) 
	@rm -f simple_bisicles$(BISICLESCFG)$(EXEEXT)
	$(FCLINK) $(simple_bisicles_LDFLAGS) $(simple_bisicles_OBJECTS)  $(LIBS) $(simple_bisicles_LDADD)
 spin_glide$(EXEEXT): $(spin_glide_OBJECTS) $(spin_glide_DEPENDENCIES) 
	@rm -f spin_glide$(EXEEXT)
	$(FCLINK) $(spin_glide_LDFLAGS) $(spin_glide_OBJECTS) $(spin_glide_LDADD) $(LIBS)
test_commandline$(EXEEXT): $(test_commandline_OBJECTS) $(test_commandline_DEPENDENCIES) 
	@rm -f test_commandline$(EXEEXT)
	$(FCLINK) $(test_commandline_LDFLAGS) $(test_commandline_OBJECTS) $(test_commandline_LDADD) $(LIBS)
test_config$(EXEEXT): $(test_config_OBJECTS) $(test_config_DEPENDENCIES) 
	@rm -f test_config$(EXEEXT)
	$(FCLINK) $(test_config_LDFLAGS) $(test_config_OBJECTS) $(test_config_LDADD) $(LIBS)
test_integrate$(EXEEXT): $(test_integrate_OBJECTS) $(test_integrate_DEPENDENCIES) 
	@rm -f test_integrate$(EXEEXT)
	$(FCLINK) $(test_integrate_LDFLAGS) $(test_integrate_OBJECTS) $(test_integrate_LDADD) $(LIBS)
test_lithot$(EXEEXT): $(test_lithot_OBJECTS) $(test_lithot_DEPENDENCIES) 
	@rm -f test_lithot$(EXEEXT)
	$(FCLINK) $(test_lithot_LDFLAGS) $(test_lithot_OBJECTS) $(test_lithot_LDADD) $(LIBS)
test_setup$(EXEEXT): $(test_setup_OBJECTS) $(test_setup_DEPENDENCIES) 
	@rm -f test_setup$(EXEEXT)
	$(FCLINK) $(test_setup_LDFLAGS) $(test_setup_OBJECTS) $(test_setup_LDADD) $(LIBS)
test_ts$(EXEEXT): $(test_ts_OBJECTS) $(test_ts_DEPENDENCIES) 
	@rm -f test_ts$(EXEEXT)
	$(FCLINK) $(test_ts_LDFLAGS) $(test_ts_OBJECTS) $(test_ts_LDADD) $(LIBS)
test_writestats$(EXEEXT): $(test_writestats_OBJECTS) $(test_writestats_DEPENDENCIES) 
	@rm -f test_writestats$(EXEEXT)
	$(FCLINK) $(test_writestats_LDFLAGS) $(test_writestats_OBJECTS) $(test_writestats_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/writestats.Po

.F90.o:
	$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:
install-dist_variableDATA: $(dist_variable_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(variabledir)" || $(mkdir_p) "$(DESTDIR)$(variabledir)"
	@list='$(dist_variable_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_variableDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(variabledir)/$$f'"; \
	  $(dist_variableDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(variabledir)/$$f"; \
	done

uninstall-dist_variableDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_variable_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(variabledir)/$$f'"; \
	  rm -f "$(DESTDIR)$(variabledir)/$$f"; \
	done
install-variableDATA: $(variable_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(variabledir)" || $(mkdir_p) "$(DESTDIR)$(variabledir)"
	@list='$(variable_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(variableDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(variabledir)/$$f'"; \
	  $(variableDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(variabledir)/$$f"; \
	done

uninstall-variableDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(variable_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(variabledir)/$$f'"; \
	  rm -f "$(DESTDIR)$(variabledir)/$$f"; \
	done
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nodist_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(variabledir)" "$(DESTDIR)$(variabledir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(INSTALL)  simple_bisicles$(BISICLESCFG) $(bindir)
#	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dist_variableDATA \
	install-nodist_includeHEADERS install-variableDATA

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_variableDATA \
	uninstall-info-am uninstall-libLIBRARIES \
	uninstall-nodist_includeHEADERS uninstall-variableDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_variableDATA \
	install-exec install-exec-am install-info install-info-am \
	install-libLIBRARIES install-man install-nodist_includeHEADERS \
	install-strip install-variableDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_variableDATA uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_includeHEADERS \
	uninstall-variableDATA


#some special rules for automatically generating ncdf src code
glide_io.F90:	glide_vars.def ncdf_template.F90.in
		$(PYTHON) $(top_srcdir)/src/python/generate_ncvars.py $^
eis_io.F90:	eis_vars.def ncdf_template.F90.in
		$(PYTHON) $(top_srcdir)/src/python/generate_ncvars.py $^
eismint3_io.F90: eismint3_vars.def ncdf_template.F90.in
		$(PYTHON) $(top_srcdir)/src/python/generate_ncvars.py $^
glint_io.F90:	glint_vars.def ncdf_template.F90.in
		$(PYTHON) $(top_srcdir)/src/python/generate_ncvars.py $^
glint_mbal_io.F90:	glint_mbal_vars.def ncdf_template.F90.in
		$(PYTHON) $(top_srcdir)/src/python/generate_ncvars.py $^
spin_io.F90:	spin_vars.def ncdf_template.F90.in
		$(PYTHON) $(top_srcdir)/src/python/generate_ncvars.py $^
# Pattern rule for restart include files
#$(RESTART_STEM)_body.inc: $(RESTART_STEM)_body.inc.in Makefile
#		cp $< $@
#$(RESTART_STEM)_head.inc: $(RESTART_STEM)_head.inc.in Makefile
#		cp $< $@
#$(RESTART_CODE:.F90=.o): $(RESTART_COMMON:.F90=.o)
$(RESTART_STEM)_body.inc $(RESTART_STEM)_head.inc: Makefile
		echo '! Dummy include file - restarts not enabled' > $@

# handling CVS versioning
#glimmer_vers.F90:	$(srcdir)/CVS/Entries glimmer_vers.F90.in 
#		$(PYTHON) $(top_srcdir)/src/python/cvs_version.py \
#                $(srcdir)/CVS/Entries glimmer_vers.F90.in $@
#$(RESTART_STEM)_body.inc.in $(RESTART_STEM)_head.inc.in: $(RESTART_CODE) Makefile
#		$(PYTHON) $(top_srcdir)/src/python/make_restarts.py -o $(RESTART_STEM) $(RESTART_CODE)
glimmer_vers.F90:	glimmer_vers.F90.in
		cp $< $@

# Originally, the makefile dependency builder used all files in $(srcdir)/*.F90
# However, this doesn't work now that mutliple files (e.g. multiple sparse solvers)
# could define the same module.
# So, we give it all of the sources used to build Glimmer
f90_dep.mak:	$(ALL_SRC) $(BUILT_SOURCES) glimmer_vers.F90
		$(PYTHON) $(top_srcdir)/src/python/f90_dependencies.py -o $@ $^

-include f90_dep.mak
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
